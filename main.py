import json
from collections import defaultdict, Counter

shopping_data = {
    "users": [
        {"id": 1, "purchases": ["laptop", "headphones", "smartphone"]},
        {"id": 2, "purchases": ["sneakers", "t-shirt", "jacket"]},
        {"id": 3, "purchases": ["detective book", "science book", "fantasy book"]},
        {"id": 4, "purchases": ["dumbbells", "treadmill", "bicycle"]},
        {"id": 5, "purchases": ["car oil", "car tires", "car accessories"]}
    ]
}

json_file_path = "shopping_data.json"

with open(json_file_path, "w", encoding="utf-8") as file:
    json.dump(shopping_data, file, indent=4, ensure_ascii=False)


# –§—É–Ω–∫—Ü–∏—è –∑–∞–≥—Ä—É–∑–∫–∏ –¥–∞–Ω–Ω—ã—Ö –∏–∑ JSON
def load_shopping_data():
    with open(json_file_path, "r", encoding="utf-8") as file:
        return json.load(file)


# –§—É–Ω–∫—Ü–∏—è –ø–æ—Å—Ç—Ä–æ–µ–Ω–∏—è —Å–≤—è–∑–µ–π –º–µ–∂–¥—É —Ç–æ–≤–∞—Ä–∞–º–∏
def build_product_relations(data):
    relations = defaultdict(list)
    for user in data["users"]:
        for item in user["purchases"]:
            relations[item].extend(user["purchases"])

    # –£–¥–∞–ª—è–µ–º –¥—É–±–ª–∏–∫–∞—Ç—ã –∏ —Å–∞–º —Ç–æ–≤–∞—Ä –∏–∑ —Å–ø–∏—Å–∫–∞ —Ä–µ–∫–æ–º–µ–Ω–¥–∞—Ü–∏–π
    for item in relations:
        relations[item] = list(set(relations[item]) - {item})

    return relations


# –§—É–Ω–∫—Ü–∏—è —Ä–µ–∫–æ–º–µ–Ω–¥–∞—Ü–∏–∏ —Ç–æ–≤–∞—Ä–æ–≤
def recommend_purchases(purchase_history, product_relations):
    recommended = Counter()
    for item in purchase_history:
        if item in product_relations:
            recommended.update(product_relations[item])

    # –£–±–∏—Ä–∞–µ–º —É–∂–µ –∫—É–ø–ª–µ–Ω–Ω—ã–µ —Ç–æ–≤–∞—Ä—ã
    for item in purchase_history:
        recommended.pop(item, None)

    return [item for item, _ in recommended.most_common(3)]  # –¢–æ–ø-3 —Ä–µ–∫–æ–º–µ–Ω–¥–∞—Ü–∏–∏


# –§—É–Ω–∫—Ü–∏—è –æ–±–Ω–æ–≤–ª–µ–Ω–∏—è –ø–æ–∫—É–ø–æ–∫ (–æ–±—É—á–µ–Ω–∏–µ)
def update_shopping_data(user_id, new_purchases):
    data = load_shopping_data()

    for user in data["users"]:
        if user["id"] == user_id:
            user["purchases"].extend(new_purchases)
            user["purchases"] = list(set(user["purchases"]))  # –£–±–∏—Ä–∞–µ–º –¥—É–±–ª–∏–∫–∞—Ç—ã
            break
    else:
        data["users"].append({"id": user_id, "purchases": new_purchases})

    # –û–±–Ω–æ–≤–ª—è–µ–º JSON-—Ñ–∞–π–ª
    with open(json_file_path, "w", encoding="utf-8") as file:
        json.dump(data, file, indent=4, ensure_ascii=False)

    print(f"‚úÖ Updated shopping data for user {user_id}!")

    # –û–±–Ω–æ–≤–ª—è–µ–º —Å–≤—è–∑–∏ –ø–æ—Å–ª–µ –¥–æ–±–∞–≤–ª–µ–Ω–∏—è –Ω–æ–≤—ã—Ö –ø–æ–∫—É–ø–æ–∫
    return build_product_relations(data)


# üîπ 2. –ó–∞–≥—Ä—É–∂–∞–µ–º –¥–∞–Ω–Ω—ã–µ –∏ —Å—Ç—Ä–æ–∏–º —Å–≤—è–∑–∏
data = load_shopping_data()
product_relations = build_product_relations(data)

# üîπ 3. –ü—Ä–æ–≤–µ—Ä—è–µ–º —Ä–µ–∫–æ–º–µ–Ω–¥–∞—Ü–∏–∏ –ø–µ—Ä–µ–¥ –æ–±—É—á–µ–Ω–∏–µ–º
user_history = ["laptop", "smartphone"]
suggested_purchases = recommend_purchases(user_history, product_relations)
print(f"üõí Based on {user_history}, recommended purchases: {suggested_purchases}")

# üîπ 4. –û–±—É—á–µ–Ω–∏–µ —Å–∏—Å—Ç–µ–º—ã (–¥–æ–±–∞–≤–ª—è–µ–º –Ω–æ–≤—ã–µ –ø–æ–∫—É–ø–∫–∏)
product_relations = update_shopping_data(6, ["tablet", "smartwatch"])
product_relations = update_shopping_data(7, ["gaming mouse", "gaming keyboard"])

# üîπ 5. –¢–µ–ø–µ—Ä—å –ø—Ä–æ–≤–µ—Ä—è–µ–º —Ä–µ–∫–æ–º–µ–Ω–¥–∞—Ü–∏–∏ –¥–ª—è –Ω–æ–≤–æ–≥–æ —Ç–æ–≤–∞—Ä–∞
new_user_history = ["gaming mouse"]
suggested_purchases_new = recommend_purchases(new_user_history, product_relations)
print(f"üõí Based on {new_user_history}, recommended purchases: {suggested_purchases_new}")